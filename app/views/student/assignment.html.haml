///////////////////////////////////////////////////////////////////////////////
//
// Automated Marking System (AMS)
// 
// A scalable automated marking system that provides automated marking, quality
// feedback, and cheating detection all in one easy to use solution.
//
//
// Copyright (C) 2014, Joseph Heron, Jonathan Gillett, Daniel Smullen, 
// and Khalil Fazal
// All rights reserved.
//
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
///////////////////////////////////////////////////////////////////////////////
-# This file is app/view/student/assignment.html.haml
#page-wrapper
  .row
    .col-lg-12
      %h1
        Submit Assignment
        %small Submit your Assignment
      %ol.breadcrumb
        %li
          %a{:href => "/student"}
            %i.fa.fa-edit
            Assignments
        %li.active
          %i.fa.fa-plus
          Submit Assignment
  / /.row
  .row
    .col-lg-12
      / DESCRIPTION
      %h2=@title
      .alert.alert-info.alert-dismissable
        %button.close{"aria-hidden" => "true", "data-dismiss" => "alert", :type => "button"} &times;
        Please make sure that you test and evaluate your submission thoroughly before the final submission,
        your code
        %strong must
        not have any compiler errors in order for it to be evaluated.
        %strong
          Any submissions that do not compile cannot be evaluated and will receive a grade of zero.
  .row
    .col-lg-7
      .panel.panel-default
        .panel-heading
          %h3.panel-title Description
        .panel-body
          %p
            = @assignment["description"]
    .col-lg-5
      .panel.panel-default
        .panel-heading
          %h3.panel-title Requirements
        .panel-body
          .bs-example
            %ul.list-group
              %li.list-group-item
                %span.badge
                  = @assignment["max_time"]
                Maximum execution time (seconds)
              %li.list-group-item
                %span.badge
                  = @assignment["attempts"]
                Maximum attempts
              %li.list-group-item
                %span.badge C++
                Language
              %li.list-group-item
                %span.badge
                  = "#{@assignment['code_weight']}%"
                Code analysis weight
              %li.list-group-item
                %span.badge
                  = "#{@assignment['test_case_weight']}%"
                Test case weight
  / TODO add css for more spacing before/after button
  .row
    .col-lg-12
      %br
        %center
          #upload_assignment_container
            %button#upload_assignment_button.btn.btn-primary.btn-lg Upload Submission
            %input#upload_assignment_input.btn.btn-primary.btn-lg{name:"file", type: "file", data: {type: "POST"}}
        %br
          %br
  - if @compiler_issues != nil && !@compiler_issues.empty?
    / COMPILER OUTPUT
    .row
      .col-lg-12
        .panel.panel-primary
          .panel-heading
            %h3.panel-title
              %i.fa.fa-gear
              Compiler Output
          .panel-body
            .table-responsive
              %table.table.table-bordered.table-hover.table-striped.tablesorter
                %thead
                  %tr
                    %th Type
                    %th File
                    %th Line, Column
                    %th Code
                    %th Description
                %tbody
                  - @compiler_issues.each do |compiler_issue|
                    - if compiler_issue["issue_type"] != "error"
                      %tr.warning
                        %td 
                          = compiler_issue["issue_type"].capitalize
                        %td 
                          = compiler_issue["filename"]
                        %td
                          = "#{compiler_issue["line_number"]}, #{compiler_issue["col_number"]}"
                        %td 
                          = compiler_issue["relavent_code"]
                        %td 
                          = compiler_issue["message"]
                    - else
                      %tr.danger
                        %td 
                          = compiler_issue["issue_type"].capitalize
                        %td 
                          = compiler_issue["filename"]
                        %td
                          = "#{compiler_issue["line_number"]}, #{compiler_issue["col_number"]}"
                        %td 
                          = compiler_issue["relavent_code"]
                        %td 
                          = compiler_issue["message"]
  - if @static_issues != nil && !@static_issues.empty?
    / QUALITY METRICS
    .row
      .col-lg-12
        .panel.panel-primary
          .panel-heading
            %h3.panel-title
              %i.fa.fa-check-circle
              Quality Assessment
          .panel-body
            .table-responsive
              %table.table.table-bordered.table-hover.table-striped.tablesorter
                %thead
                  %tr
                    %th Type
                    %th File
                    %th Line
                    %th Description
                %tbody
                  - @static_issues.each do |static_issue|
                    - if static_issue["type"] != "error"
                      %tr.warning
                        %td 
                          = static_issue["type"].capitalize
                        %td 
                          = static_issue["filename"]
                        %td
                          = static_issue["line_number"]
                        %td 
                          = static_issue["description"]
                    - else
                      %tr.danger
                        %td 
                          = static_issue["type"].capitalize
                        %td 
                          = static_issue["filename"]
                        %td
                          = static_issue["line_number"]
                        %td 
                          = static_issue["description"]
  - if @test_cases != nil && !@test_cases.empty?
    / SAMPLE EVALUATION
    .row
      .col-lg-12
        .panel.panel-primary
          .panel-heading
            %h3.panel-title
              %i.fa.fa-flag
              Sample Evalution
          .panel-body
            .table-responsive
              %table.table.table-bordered.table-hover.table-striped.tablesorter
                %thead
                  %tr
                    %th Test Name
                    %th Description
                    %th Test Case
                    %th Status
                %tbody
                  - @test_cases.each do |test_case|
                    - if test_case["result"] == 't'
                      %tr
                        %td 
                          = test_case["name"]
                        %td 
                          = test_case["description"]
                        %td 
                          %ul.list-unstyled
                            - test_case["values"].each do |value|
                              %li
                                - if value["input"] == 't'
                                  = "input: #{value["value"]}"
                                - else
                                  = "output: #{value["value"]}"
                        %td
                          %span.label.label-success
                            %span.fa.fa-check
                            PASS
                    - else
                      %tr.danger
                        %td 
                          = test_case["name"]
                        %td 
                          = test_case["description"]
                        %td 
                          %ul.list-unstyled
                            - test_case["values"].each do |value|
                              %li
                                - if value["input"] == 't'
                                  = "input: #{value["value"]}"
                                - else
                                  = "output: #{value["value"]}"
                        %td 
                          %span.label.label-danger
                            %span.fa.fa-warning
                            FAIL
  / TEST OR SUBMIT
  / TODO more button spacing between and above/below
  .row
    .col-log-12
      %br
        %center
          .table
            %tbody
              %tr
                %td= button_to 'Test', {:controller => :student, :action => :test, id: @assignment["id"]}, :class => 'btn btn-primary btn-lg'
                /%button#test_assignment.btn.btn-primary.btn-lg{name:"file", type: "file", data: {type: "POST"}} Test
                %td= button_to 'Submit', {:controller => :student, :action => :submit, id: @assignment["id"]}, :class => 'btn btn-success btn-lg'
                /%button#submit_assigment.btn.btn-success.btn-lg{:name => "submit", :type => "submit"} Submit