///////////////////////////////////////////////////////////////////////////////
//
// Automated Marking System (AMS)
// 
// A scalable automated marking system that provides automated marking, quality
// feedback, and cheating detection all in one easy to use solution.
//
//
// Copyright (C) 2014, Joseph Heron, Jonathan Gillett, Daniel Smullen, 
// and Khalil Fazal
// All rights reserved.
//
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
///////////////////////////////////////////////////////////////////////////////
-# This file is app/view/admin/new.html.haml
#page-wrapper
  .row
    .col-lg-12
      %h1
        Add New Assignment
        %small Create a New Submission
      %ol.breadcrumb
        %li
          %a{:href => "/admin"}
            %i.fa.fa-edit
            Assignments
        %li.active
          %i.fa.fa-plus
          Add New Assignment
  / /.row
  = form_for @assignment, url: {action: "create"} do |a|
    - if @assignment.errors.any?
      .error_messages
        %h2 Form is invalid
        %ul
          - for message in @assignment.errors.full_messages
            %li= message
    .row
      .col-lg-6
        / DESCRIPTION
        %h2 Description
        .alert.alert-info.alert-dismissable
          %button.close{"aria-hidden" => "true", "data-dismiss" => "alert", :type => "button"} &times;
          Specify the assignment name, description, dates, and programming language below.
        .form-group
          %label Submission Name
          = a.text_field :name, class: "form-control input-lg", placeholder: "Assignment ...", :required => ""
          %p.help-block The name of the assignment.
        .form-group
          %label Description
          = a.text_area :description, class: "form-control", :required => "", :rows => "8"
          %p.help-block Assignment description.
        .form-group
          %label Post Date
          #postdatepicker.input-group.date{:required => ""}
            = a.datetime_field :posted, class: "form-control"
            %span.input-group-addon
              %span.fa.fa-calendar
          %p.help-block The date the assignment will become available.
        .form-group
          %label Due Date
          #duedatepicker.input-group.date{:required => ""}
            = a.datetime_field :due, class: "form-control"
            %span.input-group-addon
              %span.fa.fa-calendar
          %p.help-block The deadline for the assignment.
        .form-group
          %label Language
          %select.form-control{:required => ""}
            %option C++
      .col-lg-6
        / GRADING
        %h2 Grading
        .alert.alert-info.alert-dismissable
          %button.close{"aria-hidden" => "true", "data-dismiss" => "alert", :type => "button"} &times;
          Specify the assignment requirements, number of attempts, evaluation breakdown and weights.
        %label Maximum Execution Time
        .form-group.input-group
          = a.text_field :max_time, class: "form-control", value: "60", :required => ""
          %span.input-group-addon Seconds
        %label Maximum Attempts
        .form-group.input-group
          = a.text_field :attempts, class: "form-control", value: "1", :required => ""
          %span.input-group-addon Attempts
        %p.help-block The maximum number of attempts the student can have to re-submit.
        .form-group
          %label Code Analysis Metrics
          %select.form-control{:multiple => "", :name => "metrics"}
            %option Memory Leaks
            %option Performance
            %option Stylistic Guidelines
            %option Array Bounds Checking
            %option Code Duplication
        %p.help-block The code analysis metrics to apply when grading.
        %label Code Analysis Weight
        .form-group.input-group
          = a.text_field :code_weight, class: "form-control", value: "10", :required => ""
          %span.input-group-addon %
        %p.help-block The weight code analysis metrics have on the overall grade.
        %label Test Case Evaluation Weight
        .form-group.input-group
          = a.text_field :test_case_weight, class: "form-control", value: "90", :required => ""
          %span.input-group-addon %
        %p.help-block The weight test cases have on the overall grade.
        %br
          %center
            %button.btn.btn-primary.btn-lg{:name => "submit", :type => "submit"} Submit Assignment
/ /#page-wrapper

